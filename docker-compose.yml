services:
  api:
    build: 
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - upload_storage:/app/uploads
    depends_on:
      - clamav
      - clamav-service
      - db
    restart: always
    env_file:
      - .env
      
  clamav:
    image: clamav/clamav:latest
    ports:
      - "3310:3310"
    restart: always

  clamav-service:
    build:
      context: .
      dockerfile: docker/clamav/Dockerfile
    depends_on:
      - clamav
    volumes:
      - upload_storage:/app/uploads
      - scanned_storage:/app/scanned
      - quarantine_storage:/app/quarantine
    restart: always 

  metadata-service:
    build: 
      context: .
      dockerfile: docker/metadata/Dockerfile
    depends_on:
      - clamav-service
      - db
    volumes:
      - scanned_storage:/app/scanned
      - processed_storage:/app/processed
    restart: always
    env_file:
      - .env

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
    ports:
      - "5432:5432"

volumes:
  upload_storage:
  scanned_storage:
  quarantine_storage:
  processed_storage:
  postgres_data: